name: LabCI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  Build:
    runs-on: self-hosted
    env:
      TVM_HOME: /Users/octoml/actions-runner/_work/tvm/tvm
      RUNNER_HOME: /Users/octoml/actions-runner/_work/tvm
      VENVS_HOME: /Users/octoml/actions-runner/_work/tvm/venvs
      CONDA: /Users/octoml/miniconda3
     
    steps:
    - uses: actions/checkout@v2
    - name: Initialize submodules
      run: git submodule update --recursive --init

    - name: Create venv
      run: |
        mkdir ${VENVS_HOME}
        cd ${VENVS_HOME}
        
        pwd
        ls

        python3 -m venv tvm-build
        source tvm-build/bin/activate

        ls ${TVM_HOME}
        pip install -r ${TVM_HOME}/python/requirements.txt

    - name: Build TVM from source
      run: |
        CMAKE_FLAGS="-DUSE_LLVM=ON -DUSE_BNNS=ON"

        mkdir build
        cd build
        cmake .. $(echo $CMAKE_FLAGS)
        make -j8

    # - uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     activate-environment: tvm-build
    #     channel-priority: strict
    #     environment-file: conda/tvm-build.yaml
    #     auto-activate-base: false
    #     use-only-tar-bz2: true

    # - name: Conda info
    #   run: |
    #     conda info
    #     conda list

    - name: Test@ONNX_MacOS
      shell: bash -l {0}
      run: >-
        conda activate tvm-build &&
        export PYTHONPATH=${TVM_HOME}/python:${PYTHONPATH} &&
        python -m pytest -v tests/python/contrib/test_bnns/test_onnx_topologies.py

    - name: Clean VENV
      if: always()
      run: echo "hello clean"

  Clean:
    needs: Build
    runs-on: self-hosted
     
    steps:
      - name: hello
        run: echo "hello from clean"

