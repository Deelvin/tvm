name: LabCI

# on:
#   push:
#     branches:
#       - main

#   pull_request:
#     branches:
#       - main
# on: [workflow_dispatch]

on: 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  

jobs:
  TopologyCI:
    runs-on: self-hosted
    env:
      TVM_HOME: ${{ github.workspace }}
      TVM_BUILD: ${{ github.workspace }}/build
      VENVS_HOME: ${{ github.workspace }}/venv
    
    steps:
    - uses: actions/checkout@v2
    - name: Initialize submodules
      run: git submodule update --recursive --init
    
    - name: Create venv
      run: |
        mkdir ${VENVS_HOME}
        cd ${VENVS_HOME}
        python3 -m venv tvm-build
        source tvm-build/bin/activate
        pip install -r ${TVM_HOME}/python/requirements.txt

    - name: Build TVM from source
      run: |
        CMAKE_FLAGS="-DUSE_LLVM=ON -DUSE_BNNS=ON"

        mkdir ${TVM_BUILD}
        cd ${TVM_BUILD}
        cmake .. $(echo $CMAKE_FLAGS)
        make -j8

    - name: Test@ONNX_MacOS
      run: |
        export PYTHONPATH=${TVM_HOME}/python:${PYTHONPATH}
        source ${VENVS_HOME}/tvm-build/bin/activate
        python -m pytest -v ${TVM_HOME}/tests/python/contrib/test_bnns/test_onnx_topologies.py
    
    - name: Clean VENV
      if: always()
      run: rm -rf ${VENVS_HOME}

    - name: Clean TVM Build
      if: always()
      run: rm -rf ${TVM_BUILD}
