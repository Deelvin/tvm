name: LabCI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  Build:
    strategy:
      matrix:
        os: [macOS-latest]

    runs-on: self-hosted
    env:
      TVM_HOME: /Users/runner/work/tvm/tvm
     
    steps:
    - uses: actions/checkout@v2
    - name: Initialize submodules
      run: git submodule update --recursive --init

    # - name: conda info
    #   shell: bash -l {0}
    #   run: >-
    #     conda info --envs

    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: tvm-build
        channel-priority: strict
        environment-file: conda/tvm-build.yaml
        auto-activate-base: false
        use-only-tar-bz2: true
    - name: Conda info
      run: |
        conda info
        conda list

    # - name: Build from source
    #   run: |
    #     mkdir build
    #     cp cmake/config.cmake build
    #     cd build
    #     cmake ..
    #     make -j8

    # - name: Save build
    #   run: |
    #     ls
    #     zip -r /Users/runner/work/tvm/tvm/build.zip /Users/runner/work/tvm/tvm/build
    #     ls
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: build_artifact
    #     path: /Users/runner/work/tvm/tvm/build.zip

    # - uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     activate-environment: tvm-build
    #     channel-priority: strict
    #     environment-file: conda/build-environment.yaml
    #     auto-activate-base: false
    #     use-only-tar-bz2: true
    # - name: Conda info
    #   run: |
    #     conda info
    #     conda list

    - name: Test@ONNX_MacOS
      # if: startsWith(matrix.os, 'macOS')
      shell: bash -l {0}
      run: >-
        conda activate tvm-build &&
        export PYTHONPATH=${TVM_HOME}/python:${PYTHONPATH} &&
        python -m pytest -v tests/python/contrib/test_bnns/test_onnx_topologies.py
